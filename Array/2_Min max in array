 pair<long long, long long> getMinMax(long long a[], int n) {
    
     long long int min=a[0];
     long long int max=a[0];
     for(int i=0; i<n; i++)
     {
         if(a[i]>max)
         {
             max=a[i];
         }
         else
         if(min>a[i])
         {
             min = a[i];
         }
     }
     
     return make_pair(min,max);        //make_pair() : This template function allows to create a value pair without writing the types explicitly
   }
   
   
Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)

//The above solution does 2×(n-1) comparisons in the best case and 3×(n-1) comparisons in the worst case. The worst case happens when all array elements are equal or are 
sorted in descending order. The best case happens when the input is sorted in ascending order. (Note that we have also considered n-1 comparisons done by for-loop).
__________________________________________________________________________________________________________________________________________________________________________________

//We can improve comparisons done by the above solution by considering elements in pairs. One particular case we need to handle separately when the array has an odd number of items

//Using minimum comparison

#include<iostream>
#include<vector>
//#include<climits>
using namespace std;

// Optimized solution to find the minimum and maximum number in an array
void findMinMax(vector<int> &a, int &min, int &max)
{
    int i;
    int n = a.size();
   // max = INT_MIN, min = INT_MAX;
   max = min = a[0];
   //when we have even no. of element
       if(n%2 == 0)                 //+1 extra comparison here
    {
        if(a[0] > a[1])
        {
            max = a[0];
            min = a[1];
        }
        else{
            max = a[1];
            min = a[0];
        }
        i = 2;
    }
    //when odd no. of element
    else
    {
       max = a[0];
       min = a[0];                 //No comparison here
       i = 1;      
    }
      
      while(i<n-1)
      {
          if(a[i] > a[i+1])
          {
              if(a[i] > max) max = a[i];
              if(a[i+1] < min) min = a[i+1];
          }
          else
          {
            if(a[i+1] > max) max = a[i+1];
            if(a[i] < min) min = a[i];
          }
          i += 2;
      }
}

int main()
{
    vector<int> a = {4,7,5,1,3};

    //to store min max
    int min, max;

    findMinMax(a, min, max);
    
    cout<<"Max value:"<<max<<endl;
    cout<<"Min value:"<<min<<endl;

    return 0;
}

//If the array has an even number of elements n, then the above solution does 3*(n-1)/2 + 1 comparisons in both best and worst-case. 
//(Note that we have also considered 3 comparisons done by for-loop).

//If the array has an odd number of elements n, then the above solution does 3*(n-1)/2  comparisons in both best and worst-case. 
//(We have also considered 3 comparisons done by for-loop).


